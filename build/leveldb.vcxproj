<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="16.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <PreferredToolArchitecture>x64</PreferredToolArchitecture>
  </PropertyGroup>
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="MinSizeRel|x64">
      <Configuration>MinSizeRel</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="RelWithDebInfo|x64">
      <Configuration>RelWithDebInfo</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{C1AA0B62-AA4E-36FC-8727-AEE0903FD119}</ProjectGuid>
    <WindowsTargetPlatformVersion>10.0.19041.0</WindowsTargetPlatformVersion>
    <Keyword>Win32Proj</Keyword>
    <Platform>x64</Platform>
    <ProjectName>leveldb</ProjectName>
    <VCProjectUpgraderObjectName>NoUpgrade</VCProjectUpgraderObjectName>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <CharacterSet>Unicode</CharacterSet>
    <PlatformToolset>v142</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <CharacterSet>Unicode</CharacterSet>
    <PlatformToolset>v142</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <CharacterSet>Unicode</CharacterSet>
    <PlatformToolset>v142</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <CharacterSet>Unicode</CharacterSet>
    <PlatformToolset>v142</PlatformToolset>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup>
    <_ProjectFileVersion>10.0.20506.1</_ProjectFileVersion>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">X:\GitHub\leveldb-master\leveldb\build\Debug\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">leveldb.dir\Debug\</IntDir>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">leveldb</TargetName>
    <TargetExt Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">.lib</TargetExt>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='Release|x64'">X:\GitHub\leveldb-master\leveldb\build\Release\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Release|x64'">leveldb.dir\Release\</IntDir>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='Release|x64'">leveldb</TargetName>
    <TargetExt Condition="'$(Configuration)|$(Platform)'=='Release|x64'">.lib</TargetExt>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">X:\GitHub\leveldb-master\leveldb\build\MinSizeRel\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">leveldb.dir\MinSizeRel\</IntDir>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">leveldb</TargetName>
    <TargetExt Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">.lib</TargetExt>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">X:\GitHub\leveldb-master\leveldb\build\RelWithDebInfo\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">leveldb.dir\RelWithDebInfo\</IntDir>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">leveldb</TargetName>
    <TargetExt Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">.lib</TargetExt>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <AdditionalIncludeDirectories>X:\GitHub\leveldb-master\leveldb\build\include;X:\GitHub\leveldb-master\leveldb\.;X:\GitHub\leveldb-master\leveldb\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AdditionalOptions>%(AdditionalOptions) /EHs-c-</AdditionalOptions>
      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>
      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
      <ExceptionHandling>
      </ExceptionHandling>
      <InlineFunctionExpansion>Disabled</InlineFunctionExpansion>
      <Optimization>Disabled</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>
      <RuntimeTypeInfo>false</RuntimeTypeInfo>
      <UseFullPaths>false</UseFullPaths>
      <WarningLevel>Level3</WarningLevel>
      <PreprocessorDefinitions>WIN32;_WINDOWS;LEVELDB_COMPILE_LIBRARY;LEVELDB_PLATFORM_WINDOWS=1;_UNICODE;UNICODE;_HAS_EXCEPTIONS=0;CMAKE_INTDIR="Debug";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>WIN32;_DEBUG;_WINDOWS;LEVELDB_COMPILE_LIBRARY;LEVELDB_PLATFORM_WINDOWS=1;_UNICODE;UNICODE;_HAS_EXCEPTIONS=0;CMAKE_INTDIR=\"Debug\";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>X:\GitHub\leveldb-master\leveldb\build\include;X:\GitHub\leveldb-master\leveldb\.;X:\GitHub\leveldb-master\leveldb\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>X:\GitHub\leveldb-master\leveldb\build\include;X:\GitHub\leveldb-master\leveldb\.;X:\GitHub\leveldb-master\leveldb\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <Lib>
      <AdditionalOptions>%(AdditionalOptions) /machine:x64</AdditionalOptions>
    </Lib>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <AdditionalIncludeDirectories>X:\GitHub\leveldb-master\leveldb\build\include;X:\GitHub\leveldb-master\leveldb\.;X:\GitHub\leveldb-master\leveldb\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AdditionalOptions>%(AdditionalOptions) /EHs-c-</AdditionalOptions>
      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>
      <ExceptionHandling>
      </ExceptionHandling>
      <InlineFunctionExpansion>AnySuitable</InlineFunctionExpansion>
      <Optimization>MaxSpeed</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <RuntimeTypeInfo>false</RuntimeTypeInfo>
      <UseFullPaths>false</UseFullPaths>
      <WarningLevel>Level3</WarningLevel>
      <PreprocessorDefinitions>WIN32;_WINDOWS;NDEBUG;LEVELDB_COMPILE_LIBRARY;LEVELDB_PLATFORM_WINDOWS=1;_UNICODE;UNICODE;_HAS_EXCEPTIONS=0;CMAKE_INTDIR="Release";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
      <DebugInformationFormat>
      </DebugInformationFormat>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>WIN32;_WINDOWS;NDEBUG;LEVELDB_COMPILE_LIBRARY;LEVELDB_PLATFORM_WINDOWS=1;_UNICODE;UNICODE;_HAS_EXCEPTIONS=0;CMAKE_INTDIR=\"Release\";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>X:\GitHub\leveldb-master\leveldb\build\include;X:\GitHub\leveldb-master\leveldb\.;X:\GitHub\leveldb-master\leveldb\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>X:\GitHub\leveldb-master\leveldb\build\include;X:\GitHub\leveldb-master\leveldb\.;X:\GitHub\leveldb-master\leveldb\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <Lib>
      <AdditionalOptions>%(AdditionalOptions) /machine:x64</AdditionalOptions>
    </Lib>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">
    <ClCompile>
      <AdditionalIncludeDirectories>X:\GitHub\leveldb-master\leveldb\build\include;X:\GitHub\leveldb-master\leveldb\.;X:\GitHub\leveldb-master\leveldb\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AdditionalOptions>%(AdditionalOptions) /EHs-c-</AdditionalOptions>
      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>
      <ExceptionHandling>
      </ExceptionHandling>
      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>
      <Optimization>MinSpace</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <RuntimeTypeInfo>false</RuntimeTypeInfo>
      <UseFullPaths>false</UseFullPaths>
      <WarningLevel>Level3</WarningLevel>
      <PreprocessorDefinitions>WIN32;_WINDOWS;NDEBUG;LEVELDB_COMPILE_LIBRARY;LEVELDB_PLATFORM_WINDOWS=1;_UNICODE;UNICODE;_HAS_EXCEPTIONS=0;CMAKE_INTDIR="MinSizeRel";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
      <DebugInformationFormat>
      </DebugInformationFormat>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>WIN32;_WINDOWS;NDEBUG;LEVELDB_COMPILE_LIBRARY;LEVELDB_PLATFORM_WINDOWS=1;_UNICODE;UNICODE;_HAS_EXCEPTIONS=0;CMAKE_INTDIR=\"MinSizeRel\";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>X:\GitHub\leveldb-master\leveldb\build\include;X:\GitHub\leveldb-master\leveldb\.;X:\GitHub\leveldb-master\leveldb\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>X:\GitHub\leveldb-master\leveldb\build\include;X:\GitHub\leveldb-master\leveldb\.;X:\GitHub\leveldb-master\leveldb\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <Lib>
      <AdditionalOptions>%(AdditionalOptions) /machine:x64</AdditionalOptions>
    </Lib>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">
    <ClCompile>
      <AdditionalIncludeDirectories>X:\GitHub\leveldb-master\leveldb\build\include;X:\GitHub\leveldb-master\leveldb\.;X:\GitHub\leveldb-master\leveldb\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AdditionalOptions>%(AdditionalOptions) /EHs-c-</AdditionalOptions>
      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
      <ExceptionHandling>
      </ExceptionHandling>
      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>
      <Optimization>MaxSpeed</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <RuntimeTypeInfo>false</RuntimeTypeInfo>
      <UseFullPaths>false</UseFullPaths>
      <WarningLevel>Level3</WarningLevel>
      <PreprocessorDefinitions>WIN32;_WINDOWS;NDEBUG;LEVELDB_COMPILE_LIBRARY;LEVELDB_PLATFORM_WINDOWS=1;_UNICODE;UNICODE;_HAS_EXCEPTIONS=0;CMAKE_INTDIR="RelWithDebInfo";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>WIN32;_WINDOWS;NDEBUG;LEVELDB_COMPILE_LIBRARY;LEVELDB_PLATFORM_WINDOWS=1;_UNICODE;UNICODE;_HAS_EXCEPTIONS=0;CMAKE_INTDIR=\"RelWithDebInfo\";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>X:\GitHub\leveldb-master\leveldb\build\include;X:\GitHub\leveldb-master\leveldb\.;X:\GitHub\leveldb-master\leveldb\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>X:\GitHub\leveldb-master\leveldb\build\include;X:\GitHub\leveldb-master\leveldb\.;X:\GitHub\leveldb-master\leveldb\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <Lib>
      <AdditionalOptions>%(AdditionalOptions) /machine:x64</AdditionalOptions>
    </Lib>
  </ItemDefinitionGroup>
  <ItemGroup>
    <CustomBuild Include="X:\GitHub\leveldb-master\leveldb\CMakeLists.txt">
      <StdOutEncoding>UTF-8</StdOutEncoding>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building Custom Rule X:/GitHub/leveldb-master/leveldb/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
D:\softwareHFY\Cmake\bin\cmake.exe -SX:/GitHub/leveldb-master/leveldb -BX:/GitHub/leveldb-master/leveldb/build --check-stamp-file X:/GitHub/leveldb-master/leveldb/build/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\softwareHFY\Cmake\share\cmake-3.20\Modules\BasicConfigVersion-SameMajorVersion.cmake.in;D:\softwareHFY\Cmake\share\cmake-3.20\Modules\CMakeCInformation.cmake;D:\softwareHFY\Cmake\share\cmake-3.20\Modules\CMakeCXXInformation.cmake;D:\softwareHFY\Cmake\share\cmake-3.20\Modules\CMakeCheckCompilerFlagCommonPatterns.cmake;D:\softwareHFY\Cmake\share\cmake-3.20\Modules\CMakeCommonLanguageInclude.cmake;D:\softwareHFY\Cmake\share\cmake-3.20\Modules\CMakeGenericSystem.cmake;D:\softwareHFY\Cmake\share\cmake-3.20\Modules\CMakeInitializeConfigs.cmake;D:\softwareHFY\Cmake\share\cmake-3.20\Modules\CMakeLanguageInformation.cmake;D:\softwareHFY\Cmake\share\cmake-3.20\Modules\CMakePackageConfigHelpers.cmake;D:\softwareHFY\Cmake\share\cmake-3.20\Modules\CMakeRCInformation.cmake;D:\softwareHFY\Cmake\share\cmake-3.20\Modules\CMakeSystemSpecificInformation.cmake;D:\softwareHFY\Cmake\share\cmake-3.20\Modules\CMakeSystemSpecificInitialize.cmake;D:\softwareHFY\Cmake\share\cmake-3.20\Modules\CheckCSourceCompiles.cmake;D:\softwareHFY\Cmake\share\cmake-3.20\Modules\CheckCXXCompilerFlag.cmake;D:\softwareHFY\Cmake\share\cmake-3.20\Modules\CheckCXXSourceCompiles.cmake;D:\softwareHFY\Cmake\share\cmake-3.20\Modules\CheckCXXSymbolExists.cmake;D:\softwareHFY\Cmake\share\cmake-3.20\Modules\CheckIncludeFile.cmake;D:\softwareHFY\Cmake\share\cmake-3.20\Modules\CheckLibraryExists.cmake;D:\softwareHFY\Cmake\share\cmake-3.20\Modules\CheckSymbolExists.cmake;D:\softwareHFY\Cmake\share\cmake-3.20\Modules\Compiler\CMakeCommonCompilerMacros.cmake;D:\softwareHFY\Cmake\share\cmake-3.20\Modules\Compiler\MSVC-C.cmake;D:\softwareHFY\Cmake\share\cmake-3.20\Modules\Compiler\MSVC-CXX.cmake;D:\softwareHFY\Cmake\share\cmake-3.20\Modules\FindPackageHandleStandardArgs.cmake;D:\softwareHFY\Cmake\share\cmake-3.20\Modules\FindPackageMessage.cmake;D:\softwareHFY\Cmake\share\cmake-3.20\Modules\FindThreads.cmake;D:\softwareHFY\Cmake\share\cmake-3.20\Modules\GNUInstallDirs.cmake;D:\softwareHFY\Cmake\share\cmake-3.20\Modules\Internal\CheckCompilerFlag.cmake;D:\softwareHFY\Cmake\share\cmake-3.20\Modules\Internal\CheckSourceCompiles.cmake;D:\softwareHFY\Cmake\share\cmake-3.20\Modules\Platform\Windows-MSVC-C.cmake;D:\softwareHFY\Cmake\share\cmake-3.20\Modules\Platform\Windows-MSVC-CXX.cmake;D:\softwareHFY\Cmake\share\cmake-3.20\Modules\Platform\Windows-MSVC.cmake;D:\softwareHFY\Cmake\share\cmake-3.20\Modules\Platform\Windows.cmake;D:\softwareHFY\Cmake\share\cmake-3.20\Modules\Platform\WindowsPaths.cmake;D:\softwareHFY\Cmake\share\cmake-3.20\Modules\WriteBasicConfigVersionFile.cmake;X:\GitHub\leveldb-master\leveldb\build\CMakeFiles\3.20.4\CMakeCCompiler.cmake;X:\GitHub\leveldb-master\leveldb\build\CMakeFiles\3.20.4\CMakeCXXCompiler.cmake;X:\GitHub\leveldb-master\leveldb\build\CMakeFiles\3.20.4\CMakeRCCompiler.cmake;X:\GitHub\leveldb-master\leveldb\build\CMakeFiles\3.20.4\CMakeSystem.cmake;X:\GitHub\leveldb-master\leveldb\cmake\leveldbConfig.cmake.in;X:\GitHub\leveldb-master\leveldb\port\port_config.h.in;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">X:\GitHub\leveldb-master\leveldb\build\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building Custom Rule X:/GitHub/leveldb-master/leveldb/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
D:\softwareHFY\Cmake\bin\cmake.exe -SX:/GitHub/leveldb-master/leveldb -BX:/GitHub/leveldb-master/leveldb/build --check-stamp-file X:/GitHub/leveldb-master/leveldb/build/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\softwareHFY\Cmake\share\cmake-3.20\Modules\BasicConfigVersion-SameMajorVersion.cmake.in;D:\softwareHFY\Cmake\share\cmake-3.20\Modules\CMakeCInformation.cmake;D:\softwareHFY\Cmake\share\cmake-3.20\Modules\CMakeCXXInformation.cmake;D:\softwareHFY\Cmake\share\cmake-3.20\Modules\CMakeCheckCompilerFlagCommonPatterns.cmake;D:\softwareHFY\Cmake\share\cmake-3.20\Modules\CMakeCommonLanguageInclude.cmake;D:\softwareHFY\Cmake\share\cmake-3.20\Modules\CMakeGenericSystem.cmake;D:\softwareHFY\Cmake\share\cmake-3.20\Modules\CMakeInitializeConfigs.cmake;D:\softwareHFY\Cmake\share\cmake-3.20\Modules\CMakeLanguageInformation.cmake;D:\softwareHFY\Cmake\share\cmake-3.20\Modules\CMakePackageConfigHelpers.cmake;D:\softwareHFY\Cmake\share\cmake-3.20\Modules\CMakeRCInformation.cmake;D:\softwareHFY\Cmake\share\cmake-3.20\Modules\CMakeSystemSpecificInformation.cmake;D:\softwareHFY\Cmake\share\cmake-3.20\Modules\CMakeSystemSpecificInitialize.cmake;D:\softwareHFY\Cmake\share\cmake-3.20\Modules\CheckCSourceCompiles.cmake;D:\softwareHFY\Cmake\share\cmake-3.20\Modules\CheckCXXCompilerFlag.cmake;D:\softwareHFY\Cmake\share\cmake-3.20\Modules\CheckCXXSourceCompiles.cmake;D:\softwareHFY\Cmake\share\cmake-3.20\Modules\CheckCXXSymbolExists.cmake;D:\softwareHFY\Cmake\share\cmake-3.20\Modules\CheckIncludeFile.cmake;D:\softwareHFY\Cmake\share\cmake-3.20\Modules\CheckLibraryExists.cmake;D:\softwareHFY\Cmake\share\cmake-3.20\Modules\CheckSymbolExists.cmake;D:\softwareHFY\Cmake\share\cmake-3.20\Modules\Compiler\CMakeCommonCompilerMacros.cmake;D:\softwareHFY\Cmake\share\cmake-3.20\Modules\Compiler\MSVC-C.cmake;D:\softwareHFY\Cmake\share\cmake-3.20\Modules\Compiler\MSVC-CXX.cmake;D:\softwareHFY\Cmake\share\cmake-3.20\Modules\FindPackageHandleStandardArgs.cmake;D:\softwareHFY\Cmake\share\cmake-3.20\Modules\FindPackageMessage.cmake;D:\softwareHFY\Cmake\share\cmake-3.20\Modules\FindThreads.cmake;D:\softwareHFY\Cmake\share\cmake-3.20\Modules\GNUInstallDirs.cmake;D:\softwareHFY\Cmake\share\cmake-3.20\Modules\Internal\CheckCompilerFlag.cmake;D:\softwareHFY\Cmake\share\cmake-3.20\Modules\Internal\CheckSourceCompiles.cmake;D:\softwareHFY\Cmake\share\cmake-3.20\Modules\Platform\Windows-MSVC-C.cmake;D:\softwareHFY\Cmake\share\cmake-3.20\Modules\Platform\Windows-MSVC-CXX.cmake;D:\softwareHFY\Cmake\share\cmake-3.20\Modules\Platform\Windows-MSVC.cmake;D:\softwareHFY\Cmake\share\cmake-3.20\Modules\Platform\Windows.cmake;D:\softwareHFY\Cmake\share\cmake-3.20\Modules\Platform\WindowsPaths.cmake;D:\softwareHFY\Cmake\share\cmake-3.20\Modules\WriteBasicConfigVersionFile.cmake;X:\GitHub\leveldb-master\leveldb\build\CMakeFiles\3.20.4\CMakeCCompiler.cmake;X:\GitHub\leveldb-master\leveldb\build\CMakeFiles\3.20.4\CMakeCXXCompiler.cmake;X:\GitHub\leveldb-master\leveldb\build\CMakeFiles\3.20.4\CMakeRCCompiler.cmake;X:\GitHub\leveldb-master\leveldb\build\CMakeFiles\3.20.4\CMakeSystem.cmake;X:\GitHub\leveldb-master\leveldb\cmake\leveldbConfig.cmake.in;X:\GitHub\leveldb-master\leveldb\port\port_config.h.in;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">X:\GitHub\leveldb-master\leveldb\build\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Building Custom Rule X:/GitHub/leveldb-master/leveldb/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
D:\softwareHFY\Cmake\bin\cmake.exe -SX:/GitHub/leveldb-master/leveldb -BX:/GitHub/leveldb-master/leveldb/build --check-stamp-file X:/GitHub/leveldb-master/leveldb/build/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\softwareHFY\Cmake\share\cmake-3.20\Modules\BasicConfigVersion-SameMajorVersion.cmake.in;D:\softwareHFY\Cmake\share\cmake-3.20\Modules\CMakeCInformation.cmake;D:\softwareHFY\Cmake\share\cmake-3.20\Modules\CMakeCXXInformation.cmake;D:\softwareHFY\Cmake\share\cmake-3.20\Modules\CMakeCheckCompilerFlagCommonPatterns.cmake;D:\softwareHFY\Cmake\share\cmake-3.20\Modules\CMakeCommonLanguageInclude.cmake;D:\softwareHFY\Cmake\share\cmake-3.20\Modules\CMakeGenericSystem.cmake;D:\softwareHFY\Cmake\share\cmake-3.20\Modules\CMakeInitializeConfigs.cmake;D:\softwareHFY\Cmake\share\cmake-3.20\Modules\CMakeLanguageInformation.cmake;D:\softwareHFY\Cmake\share\cmake-3.20\Modules\CMakePackageConfigHelpers.cmake;D:\softwareHFY\Cmake\share\cmake-3.20\Modules\CMakeRCInformation.cmake;D:\softwareHFY\Cmake\share\cmake-3.20\Modules\CMakeSystemSpecificInformation.cmake;D:\softwareHFY\Cmake\share\cmake-3.20\Modules\CMakeSystemSpecificInitialize.cmake;D:\softwareHFY\Cmake\share\cmake-3.20\Modules\CheckCSourceCompiles.cmake;D:\softwareHFY\Cmake\share\cmake-3.20\Modules\CheckCXXCompilerFlag.cmake;D:\softwareHFY\Cmake\share\cmake-3.20\Modules\CheckCXXSourceCompiles.cmake;D:\softwareHFY\Cmake\share\cmake-3.20\Modules\CheckCXXSymbolExists.cmake;D:\softwareHFY\Cmake\share\cmake-3.20\Modules\CheckIncludeFile.cmake;D:\softwareHFY\Cmake\share\cmake-3.20\Modules\CheckLibraryExists.cmake;D:\softwareHFY\Cmake\share\cmake-3.20\Modules\CheckSymbolExists.cmake;D:\softwareHFY\Cmake\share\cmake-3.20\Modules\Compiler\CMakeCommonCompilerMacros.cmake;D:\softwareHFY\Cmake\share\cmake-3.20\Modules\Compiler\MSVC-C.cmake;D:\softwareHFY\Cmake\share\cmake-3.20\Modules\Compiler\MSVC-CXX.cmake;D:\softwareHFY\Cmake\share\cmake-3.20\Modules\FindPackageHandleStandardArgs.cmake;D:\softwareHFY\Cmake\share\cmake-3.20\Modules\FindPackageMessage.cmake;D:\softwareHFY\Cmake\share\cmake-3.20\Modules\FindThreads.cmake;D:\softwareHFY\Cmake\share\cmake-3.20\Modules\GNUInstallDirs.cmake;D:\softwareHFY\Cmake\share\cmake-3.20\Modules\Internal\CheckCompilerFlag.cmake;D:\softwareHFY\Cmake\share\cmake-3.20\Modules\Internal\CheckSourceCompiles.cmake;D:\softwareHFY\Cmake\share\cmake-3.20\Modules\Platform\Windows-MSVC-C.cmake;D:\softwareHFY\Cmake\share\cmake-3.20\Modules\Platform\Windows-MSVC-CXX.cmake;D:\softwareHFY\Cmake\share\cmake-3.20\Modules\Platform\Windows-MSVC.cmake;D:\softwareHFY\Cmake\share\cmake-3.20\Modules\Platform\Windows.cmake;D:\softwareHFY\Cmake\share\cmake-3.20\Modules\Platform\WindowsPaths.cmake;D:\softwareHFY\Cmake\share\cmake-3.20\Modules\WriteBasicConfigVersionFile.cmake;X:\GitHub\leveldb-master\leveldb\build\CMakeFiles\3.20.4\CMakeCCompiler.cmake;X:\GitHub\leveldb-master\leveldb\build\CMakeFiles\3.20.4\CMakeCXXCompiler.cmake;X:\GitHub\leveldb-master\leveldb\build\CMakeFiles\3.20.4\CMakeRCCompiler.cmake;X:\GitHub\leveldb-master\leveldb\build\CMakeFiles\3.20.4\CMakeSystem.cmake;X:\GitHub\leveldb-master\leveldb\cmake\leveldbConfig.cmake.in;X:\GitHub\leveldb-master\leveldb\port\port_config.h.in;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">X:\GitHub\leveldb-master\leveldb\build\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Building Custom Rule X:/GitHub/leveldb-master/leveldb/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
D:\softwareHFY\Cmake\bin\cmake.exe -SX:/GitHub/leveldb-master/leveldb -BX:/GitHub/leveldb-master/leveldb/build --check-stamp-file X:/GitHub/leveldb-master/leveldb/build/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\softwareHFY\Cmake\share\cmake-3.20\Modules\BasicConfigVersion-SameMajorVersion.cmake.in;D:\softwareHFY\Cmake\share\cmake-3.20\Modules\CMakeCInformation.cmake;D:\softwareHFY\Cmake\share\cmake-3.20\Modules\CMakeCXXInformation.cmake;D:\softwareHFY\Cmake\share\cmake-3.20\Modules\CMakeCheckCompilerFlagCommonPatterns.cmake;D:\softwareHFY\Cmake\share\cmake-3.20\Modules\CMakeCommonLanguageInclude.cmake;D:\softwareHFY\Cmake\share\cmake-3.20\Modules\CMakeGenericSystem.cmake;D:\softwareHFY\Cmake\share\cmake-3.20\Modules\CMakeInitializeConfigs.cmake;D:\softwareHFY\Cmake\share\cmake-3.20\Modules\CMakeLanguageInformation.cmake;D:\softwareHFY\Cmake\share\cmake-3.20\Modules\CMakePackageConfigHelpers.cmake;D:\softwareHFY\Cmake\share\cmake-3.20\Modules\CMakeRCInformation.cmake;D:\softwareHFY\Cmake\share\cmake-3.20\Modules\CMakeSystemSpecificInformation.cmake;D:\softwareHFY\Cmake\share\cmake-3.20\Modules\CMakeSystemSpecificInitialize.cmake;D:\softwareHFY\Cmake\share\cmake-3.20\Modules\CheckCSourceCompiles.cmake;D:\softwareHFY\Cmake\share\cmake-3.20\Modules\CheckCXXCompilerFlag.cmake;D:\softwareHFY\Cmake\share\cmake-3.20\Modules\CheckCXXSourceCompiles.cmake;D:\softwareHFY\Cmake\share\cmake-3.20\Modules\CheckCXXSymbolExists.cmake;D:\softwareHFY\Cmake\share\cmake-3.20\Modules\CheckIncludeFile.cmake;D:\softwareHFY\Cmake\share\cmake-3.20\Modules\CheckLibraryExists.cmake;D:\softwareHFY\Cmake\share\cmake-3.20\Modules\CheckSymbolExists.cmake;D:\softwareHFY\Cmake\share\cmake-3.20\Modules\Compiler\CMakeCommonCompilerMacros.cmake;D:\softwareHFY\Cmake\share\cmake-3.20\Modules\Compiler\MSVC-C.cmake;D:\softwareHFY\Cmake\share\cmake-3.20\Modules\Compiler\MSVC-CXX.cmake;D:\softwareHFY\Cmake\share\cmake-3.20\Modules\FindPackageHandleStandardArgs.cmake;D:\softwareHFY\Cmake\share\cmake-3.20\Modules\FindPackageMessage.cmake;D:\softwareHFY\Cmake\share\cmake-3.20\Modules\FindThreads.cmake;D:\softwareHFY\Cmake\share\cmake-3.20\Modules\GNUInstallDirs.cmake;D:\softwareHFY\Cmake\share\cmake-3.20\Modules\Internal\CheckCompilerFlag.cmake;D:\softwareHFY\Cmake\share\cmake-3.20\Modules\Internal\CheckSourceCompiles.cmake;D:\softwareHFY\Cmake\share\cmake-3.20\Modules\Platform\Windows-MSVC-C.cmake;D:\softwareHFY\Cmake\share\cmake-3.20\Modules\Platform\Windows-MSVC-CXX.cmake;D:\softwareHFY\Cmake\share\cmake-3.20\Modules\Platform\Windows-MSVC.cmake;D:\softwareHFY\Cmake\share\cmake-3.20\Modules\Platform\Windows.cmake;D:\softwareHFY\Cmake\share\cmake-3.20\Modules\Platform\WindowsPaths.cmake;D:\softwareHFY\Cmake\share\cmake-3.20\Modules\WriteBasicConfigVersionFile.cmake;X:\GitHub\leveldb-master\leveldb\build\CMakeFiles\3.20.4\CMakeCCompiler.cmake;X:\GitHub\leveldb-master\leveldb\build\CMakeFiles\3.20.4\CMakeCXXCompiler.cmake;X:\GitHub\leveldb-master\leveldb\build\CMakeFiles\3.20.4\CMakeRCCompiler.cmake;X:\GitHub\leveldb-master\leveldb\build\CMakeFiles\3.20.4\CMakeSystem.cmake;X:\GitHub\leveldb-master\leveldb\cmake\leveldbConfig.cmake.in;X:\GitHub\leveldb-master\leveldb\port\port_config.h.in;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">X:\GitHub\leveldb-master\leveldb\build\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <ClInclude Include="X:\GitHub\leveldb-master\leveldb\build\include\port\port_config.h" />
    <ClCompile Include="X:\GitHub\leveldb-master\leveldb\db\builder.cc" />
    <ClInclude Include="X:\GitHub\leveldb-master\leveldb\db\builder.h" />
    <ClCompile Include="X:\GitHub\leveldb-master\leveldb\db\c.cc" />
    <ClCompile Include="X:\GitHub\leveldb-master\leveldb\db\db_impl.cc" />
    <ClInclude Include="X:\GitHub\leveldb-master\leveldb\db\db_impl.h" />
    <ClCompile Include="X:\GitHub\leveldb-master\leveldb\db\db_iter.cc" />
    <ClInclude Include="X:\GitHub\leveldb-master\leveldb\db\db_iter.h" />
    <ClCompile Include="X:\GitHub\leveldb-master\leveldb\db\dbformat.cc" />
    <ClInclude Include="X:\GitHub\leveldb-master\leveldb\db\dbformat.h" />
    <ClCompile Include="X:\GitHub\leveldb-master\leveldb\db\dumpfile.cc" />
    <ClCompile Include="X:\GitHub\leveldb-master\leveldb\db\filename.cc" />
    <ClInclude Include="X:\GitHub\leveldb-master\leveldb\db\filename.h" />
    <ClInclude Include="X:\GitHub\leveldb-master\leveldb\db\log_format.h" />
    <ClCompile Include="X:\GitHub\leveldb-master\leveldb\db\log_reader.cc" />
    <ClInclude Include="X:\GitHub\leveldb-master\leveldb\db\log_reader.h" />
    <ClCompile Include="X:\GitHub\leveldb-master\leveldb\db\log_writer.cc" />
    <ClInclude Include="X:\GitHub\leveldb-master\leveldb\db\log_writer.h" />
    <ClCompile Include="X:\GitHub\leveldb-master\leveldb\db\memtable.cc" />
    <ClInclude Include="X:\GitHub\leveldb-master\leveldb\db\memtable.h" />
    <ClCompile Include="X:\GitHub\leveldb-master\leveldb\db\repair.cc" />
    <ClInclude Include="X:\GitHub\leveldb-master\leveldb\db\skiplist.h" />
    <ClInclude Include="X:\GitHub\leveldb-master\leveldb\db\snapshot.h" />
    <ClCompile Include="X:\GitHub\leveldb-master\leveldb\db\table_cache.cc" />
    <ClInclude Include="X:\GitHub\leveldb-master\leveldb\db\table_cache.h" />
    <ClCompile Include="X:\GitHub\leveldb-master\leveldb\db\version_edit.cc" />
    <ClInclude Include="X:\GitHub\leveldb-master\leveldb\db\version_edit.h" />
    <ClCompile Include="X:\GitHub\leveldb-master\leveldb\db\version_set.cc" />
    <ClInclude Include="X:\GitHub\leveldb-master\leveldb\db\version_set.h" />
    <ClInclude Include="X:\GitHub\leveldb-master\leveldb\db\write_batch_internal.h" />
    <ClCompile Include="X:\GitHub\leveldb-master\leveldb\db\write_batch.cc" />
    <ClInclude Include="X:\GitHub\leveldb-master\leveldb\port\port_stdcxx.h" />
    <ClInclude Include="X:\GitHub\leveldb-master\leveldb\port\port.h" />
    <ClInclude Include="X:\GitHub\leveldb-master\leveldb\port\thread_annotations.h" />
    <ClCompile Include="X:\GitHub\leveldb-master\leveldb\table\block_builder.cc" />
    <ClInclude Include="X:\GitHub\leveldb-master\leveldb\table\block_builder.h" />
    <ClCompile Include="X:\GitHub\leveldb-master\leveldb\table\block.cc" />
    <ClInclude Include="X:\GitHub\leveldb-master\leveldb\table\block.h" />
    <ClCompile Include="X:\GitHub\leveldb-master\leveldb\table\filter_block.cc" />
    <ClInclude Include="X:\GitHub\leveldb-master\leveldb\table\filter_block.h" />
    <ClCompile Include="X:\GitHub\leveldb-master\leveldb\table\format.cc" />
    <ClInclude Include="X:\GitHub\leveldb-master\leveldb\table\format.h" />
    <ClInclude Include="X:\GitHub\leveldb-master\leveldb\table\iterator_wrapper.h" />
    <ClCompile Include="X:\GitHub\leveldb-master\leveldb\table\iterator.cc" />
    <ClCompile Include="X:\GitHub\leveldb-master\leveldb\table\merger.cc" />
    <ClInclude Include="X:\GitHub\leveldb-master\leveldb\table\merger.h" />
    <ClCompile Include="X:\GitHub\leveldb-master\leveldb\table\table_builder.cc" />
    <ClCompile Include="X:\GitHub\leveldb-master\leveldb\table\table.cc" />
    <ClCompile Include="X:\GitHub\leveldb-master\leveldb\table\two_level_iterator.cc" />
    <ClInclude Include="X:\GitHub\leveldb-master\leveldb\table\two_level_iterator.h" />
    <ClCompile Include="X:\GitHub\leveldb-master\leveldb\util\arena.cc" />
    <ClInclude Include="X:\GitHub\leveldb-master\leveldb\util\arena.h" />
    <ClCompile Include="X:\GitHub\leveldb-master\leveldb\util\bloom.cc" />
    <ClCompile Include="X:\GitHub\leveldb-master\leveldb\util\cache.cc" />
    <ClCompile Include="X:\GitHub\leveldb-master\leveldb\util\coding.cc" />
    <ClInclude Include="X:\GitHub\leveldb-master\leveldb\util\coding.h" />
    <ClCompile Include="X:\GitHub\leveldb-master\leveldb\util\comparator.cc" />
    <ClCompile Include="X:\GitHub\leveldb-master\leveldb\util\crc32c.cc" />
    <ClInclude Include="X:\GitHub\leveldb-master\leveldb\util\crc32c.h" />
    <ClCompile Include="X:\GitHub\leveldb-master\leveldb\util\env.cc" />
    <ClCompile Include="X:\GitHub\leveldb-master\leveldb\util\filter_policy.cc" />
    <ClCompile Include="X:\GitHub\leveldb-master\leveldb\util\hash.cc" />
    <ClInclude Include="X:\GitHub\leveldb-master\leveldb\util\hash.h" />
    <ClCompile Include="X:\GitHub\leveldb-master\leveldb\util\logging.cc" />
    <ClInclude Include="X:\GitHub\leveldb-master\leveldb\util\logging.h" />
    <ClInclude Include="X:\GitHub\leveldb-master\leveldb\util\mutexlock.h" />
    <ClInclude Include="X:\GitHub\leveldb-master\leveldb\util\no_destructor.h" />
    <ClCompile Include="X:\GitHub\leveldb-master\leveldb\util\options.cc" />
    <ClInclude Include="X:\GitHub\leveldb-master\leveldb\util\random.h" />
    <ClCompile Include="X:\GitHub\leveldb-master\leveldb\util\status.cc" />
    <ClInclude Include="X:\GitHub\leveldb-master\leveldb\include\leveldb\c.h" />
    <ClInclude Include="X:\GitHub\leveldb-master\leveldb\include\leveldb\cache.h" />
    <ClInclude Include="X:\GitHub\leveldb-master\leveldb\include\leveldb\comparator.h" />
    <ClInclude Include="X:\GitHub\leveldb-master\leveldb\include\leveldb\db.h" />
    <ClInclude Include="X:\GitHub\leveldb-master\leveldb\include\leveldb\dumpfile.h" />
    <ClInclude Include="X:\GitHub\leveldb-master\leveldb\include\leveldb\env.h" />
    <ClInclude Include="X:\GitHub\leveldb-master\leveldb\include\leveldb\export.h" />
    <ClInclude Include="X:\GitHub\leveldb-master\leveldb\include\leveldb\filter_policy.h" />
    <ClInclude Include="X:\GitHub\leveldb-master\leveldb\include\leveldb\iterator.h" />
    <ClInclude Include="X:\GitHub\leveldb-master\leveldb\include\leveldb\options.h" />
    <ClInclude Include="X:\GitHub\leveldb-master\leveldb\include\leveldb\slice.h" />
    <ClInclude Include="X:\GitHub\leveldb-master\leveldb\include\leveldb\status.h" />
    <ClInclude Include="X:\GitHub\leveldb-master\leveldb\include\leveldb\table_builder.h" />
    <ClInclude Include="X:\GitHub\leveldb-master\leveldb\include\leveldb\table.h" />
    <ClInclude Include="X:\GitHub\leveldb-master\leveldb\include\leveldb\write_batch.h" />
    <ClCompile Include="X:\GitHub\leveldb-master\leveldb\util\env_windows.cc" />
    <ClInclude Include="X:\GitHub\leveldb-master\leveldb\util\windows_logger.h" />
    <ClCompile Include="X:\GitHub\leveldb-master\leveldb\helpers\memenv\memenv.cc" />
    <ClInclude Include="X:\GitHub\leveldb-master\leveldb\helpers\memenv\memenv.h" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="X:\GitHub\leveldb-master\leveldb\build\ZERO_CHECK.vcxproj">
      <Project>{43D8D14E-3AA0-3A18-A23B-FE12C8C284B4}</Project>
      <Name>ZERO_CHECK</Name>
      <ReferenceOutputAssembly>false</ReferenceOutputAssembly>
      <CopyToOutputDirectory>Never</CopyToOutputDirectory>
    </ProjectReference>
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>